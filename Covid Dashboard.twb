<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0ops04f11io8061eguqar1238506' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0g5u7kf0cuhv4014jm7s91qlip1v'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Doctor/Downloads/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0g5u7kf0cuhv4014jm7s91qlip1v' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0g5u7kf0cuhv4014jm7s91qlip1v' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3D36758D668C4372A8F1092EEEDAB264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3D36758D668C4372A8F1092EEEDAB264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3D36758D668C4372A8F1092EEEDAB264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_3D36758D668C4372A8F1092EEEDAB264]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_3D36758D668C4372A8F1092EEEDAB264'>
            <properties context=''>
              <relation connection='excel-direct.0g5u7kf0cuhv4014jm7s91qlip1v' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1x4o1gk1yl4j8d13cujvr1s8agw3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.04xt5ju1v3lpq312wc3cf0hyw61p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Doctor/Downloads/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.04xt5ju1v3lpq312wc3cf0hyw61p' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.04xt5ju1v3lpq312wc3cf0hyw61p' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4858326E26DA4A3E986F5F0FDDFCF059]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4858326E26DA4A3E986F5F0FDDFCF059]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4858326E26DA4A3E986F5F0FDDFCF059]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4858326E26DA4A3E986F5F0FDDFCF059'>
            <properties context=''>
              <relation connection='excel-direct.04xt5ju1v3lpq312wc3cf0hyw61p' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.0jataio02hbnoy10un6eh1pna54y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1jeftiq1600k0b12y0jkb1cid7e8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Doctor/Downloads/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jeftiq1600k0b12y0jkb1cid7e8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1jeftiq1600k0b12y0jkb1cid7e8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_94649FAFD8A64EEBB02DB8AB2FB40B63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_94649FAFD8A64EEBB02DB8AB2FB40B63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_94649FAFD8A64EEBB02DB8AB2FB40B63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_94649FAFD8A64EEBB02DB8AB2FB40B63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_94649FAFD8A64EEBB02DB8AB2FB40B63]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_94649FAFD8A64EEBB02DB8AB2FB40B63'>
            <properties context=''>
              <relation connection='excel-direct.1jeftiq1600k0b12y0jkb1cid7e8' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1c4i9dl1yygyes1esa3cc06897ij' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1hntvug02svhbk13croex0rhpr6y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Doctor/Downloads/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1hntvug02svhbk13croex0rhpr6y' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1hntvug02svhbk13croex0rhpr6y' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8B197F2F0014469EBA73E36A782BC29F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8B197F2F0014469EBA73E36A782BC29F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8B197F2F0014469EBA73E36A782BC29F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8B197F2F0014469EBA73E36A782BC29F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8B197F2F0014469EBA73E36A782BC29F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8B197F2F0014469EBA73E36A782BC29F]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8B197F2F0014469EBA73E36A782BC29F'>
            <properties context=''>
              <relation connection='excel-direct.1hntvug02svhbk13croex0rhpr6y' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0ops04f11io8061eguqar1238506' />
          </datasources>
          <datasource-dependencies datasource='federated.0ops04f11io8061eguqar1238506'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ops04f11io8061eguqar1238506].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ops04f11io8061eguqar1238506].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ops04f11io8061eguqar1238506].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ops04f11io8061eguqar1238506].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ops04f11io8061eguqar1238506].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ops04f11io8061eguqar1238506].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ops04f11io8061eguqar1238506].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ops04f11io8061eguqar1238506].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0ops04f11io8061eguqar1238506].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ops04f11io8061eguqar1238506].[:Measure Names]' value='110' />
            <format attr='height' value='31' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0ops04f11io8061eguqar1238506].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='background-color' scope='cols' value='#ddebf0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f3ebf3' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0ops04f11io8061eguqar1238506].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.813093900680542' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0ops04f11io8061eguqar1238506].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EA75B3B9-70E2-4F6D-959D-1E1E0535C919}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1x4o1gk1yl4j8d13cujvr1s8agw3' />
          </datasources>
          <datasource-dependencies datasource='federated.1x4o1gk1yl4j8d13cujvr1s8agw3'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Low income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{D581B6DA-0E8E-4A3E-8383-4BDD47A6C694}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.0jataio02hbnoy10un6eh1pna54y' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jataio02hbnoy10un6eh1pna54y'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0jataio02hbnoy10un6eh1pna54y].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0jataio02hbnoy10un6eh1pna54y].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0jataio02hbnoy10un6eh1pna54y].[Latitude (generated)]</column>
            <column>[federated.0jataio02hbnoy10un6eh1pna54y].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jataio02hbnoy10un6eh1pna54y].[Longitude (generated)]' field-type='quantitative' max='18283983.856194634' min='-16685384.283545488' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jataio02hbnoy10un6eh1pna54y].[Latitude (generated)]' field-type='quantitative' max='10155023.700463457' min='-1150861.8398240472' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0jataio02hbnoy10un6eh1pna54y].[sum:PercentPopulationInfected:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0jataio02hbnoy10un6eh1pna54y].[none:Location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0jataio02hbnoy10un6eh1pna54y].[none:Location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0jataio02hbnoy10un6eh1pna54y].[none:Location:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0jataio02hbnoy10un6eh1pna54y].[none:Location:nk]' />
              <color column='[federated.0jataio02hbnoy10un6eh1pna54y].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0jataio02hbnoy10un6eh1pna54y].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jataio02hbnoy10un6eh1pna54y].[Latitude (generated)]</rows>
        <cols>[federated.0jataio02hbnoy10un6eh1pna54y].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A2ED2C7F-F13C-4548-9020-AC1674FC7231}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1c4i9dl1yygyes1esa3cc06897ij' />
          </datasources>
          <datasource-dependencies datasource='federated.1c4i9dl1yygyes1esa3cc06897ij'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Palestine&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Syria&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1c4i9dl1yygyes1esa3cc06897ij].[tyr:date:qk]' included-values='in-range'>
            <max>#2024-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Location:nk]</column>
            <column>[federated.1c4i9dl1yygyes1esa3cc06897ij].[tyr:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1c4i9dl1yygyes1esa3cc06897ij].[tyr:date:qk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Location:nk]' />
              <text column='[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Location:nk]' />
              <color column='[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c4i9dl1yygyes1esa3cc06897ij].[fVal:sum:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1c4i9dl1yygyes1esa3cc06897ij].[tyr:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{C5F54A6E-1065-4AA3-B5F9-FEA272F68223}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='11' param='horz' type-v2='layout-flow' w='98656' x='672' y='1351'>
            <zone h='97298' id='8' param='horz' type-v2='layout-flow' w='90421' x='672' y='1351'>
              <zone h='97298' id='6' type-v2='layout-basic' w='90421' x='672' y='1351'>
                <zone h='18919' id='3' name='Sheet 1' w='43866' x='672' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='29730' id='9' name='Sheet 2' w='43866' x='672' y='20270'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48649' id='13' name='Sheet 3' w='46555' x='44538' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48649' id='15' name='Sheet 4' w='90421' x='672' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='98' h='97298' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='8235' x='91093' y='1351'>
              <zone h='24662' id='12' name='Sheet 2' pane-specification-id='0' param='[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]' type-v2='color' w='8235' x='91093' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10979' id='14' name='Sheet 3' pane-specification-id='1' param='[federated.0jataio02hbnoy10un6eh1pna54y].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8235' x='91093' y='26013'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38175' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Location:nk]&#10;[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Forecast Indicator:nk]' type-v2='color' w='8235' x='91093' y='36992'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='17' param='vert' type-v2='layout-flow' w='98656' x='672' y='1351'>
                <zone fixed-size='143' h='18919' id='3' is-fixed='true' name='Sheet 1' w='43866' x='672' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='13' is-fixed='true' name='Sheet 3' w='46555' x='44538' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10979' id='14' name='Sheet 3' pane-specification-id='1' param='[federated.0jataio02hbnoy10un6eh1pna54y].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8235' x='91093' y='26013'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='230' h='29730' id='9' is-fixed='true' name='Sheet 2' w='43866' x='672' y='20270'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24662' id='12' name='Sheet 2' pane-specification-id='0' param='[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]' type-v2='color' w='8235' x='91093' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='15' is-fixed='true' name='Sheet 4' w='90421' x='672' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='38175' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Location:nk]&#10;[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Forecast Indicator:nk]' type-v2='color' w='8235' x='91093' y='36992'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DF3E4EB0-BD61-4E92-8246-7ABEB9A8A501}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ops04f11io8061eguqar1238506].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DA3CC04-1A48-46FF-87FF-F2CC9DF3E5DF}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[sum:TotalDeathCount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECDE3E26-817F-4C1F-BB94-DA18AF63B1D7}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0jataio02hbnoy10un6eh1pna54y].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jataio02hbnoy10un6eh1pna54y].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{051EED20-9DB5-49E4-A2B1-9F10D42FDCA5}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='101'>
            <card pane-specification-id='0' param='[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Location:nk]&#10;[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Forecast Indicator:nk]</field>
            <field>[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Location:nk]</field>
            <field>[federated.1c4i9dl1yygyes1esa3cc06897ij].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98B40A1E-D1D3-426A-B86D-BA84E7035191}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1x4o1gk1yl4j8d13cujvr1s8agw3].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Forecast Indicator:nk]</field>
              <field>[federated.1c4i9dl1yygyes1esa3cc06897ij].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7231F1DC-A3E0-44DA-8FD1-E976883687A1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Fmua/x+xSbqY+09sVwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='55' name='Sheet 1' width='192'>
      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
      2J0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      4oYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy915ck2X3n97lh0ntTVVneu/a+p8cbYACQIAkQBN1SpA4l7Tk60jl65pP+
      BT1IOtKeFaldccnlkgRAEBjMYDC2Z6anvasu712WS+8zIq4esqq7urvazXTPAFv17dPdmZER
      N27c+P3u/fkrEomEtNls7GEPuxGazWbD7XZ/3f3Ywx6+Fihfdwf2sIevE3sMsIddjT0G2MOu
      xh4D7GFXY48B9rCrsccAe9jV2GOAPexq7DHAHnY19hhgD7saewywh12NPQbYw67GHgPsYVdD
      +7o78HVgo2ySrcqvuxt7+DXArmSAD1crnNuofN3d2MOvAfZEoD3sauwxwB52NfYYYA+7GnsM
      sIddjT0G2MOuxh4D7GFXY1eaQX+dIaUEJBgGKAoIBaHszVPPCnsM8GsCKSVkk3gWR2mrZggZ
      RRTdxopUmQ61o4YbKDp8IMTX3dX/qrDHAF83SnmQEmvyOvULN/mt7g5ao0GECAESw7SIZ+eZ
      nZrgo/bnqboDX3eP/6vCHgM8AaSUYBqoa/OYpQK4vKiFDIrLSzXaglDUx2+rWoGpa7QkFwgq
      kqsLC5R9fuo9HoQQlKpVhtfWGVnboGxJSrqDkHOMROcJquytAk8LewzwmJDVMvaJy5SXZzhZ
      5yXqcTE5O4xX1wni59atCeZ1P2agDhFpRqgPZgZZzOFLLuCZvMiBhjqiHjf2UgCHrmPXaq8k
      W66QKVf4nYFeqoaJYZlcWJuhGG7B8jdg7jHBU8EeAzwGpGkiL/+KuvwK3zp2mI9vjXK6p4tq
      1eRQVweKopC8doMWXVKJL3FJs2GFYzu3JS1kpYyVTpB3+ljMFbmwuExvJMRL3Z23Rfyox83L
      ns2KfTYAyRlVpW7uPKnmLm6EB8hYj7/i7GFn7DHAQyBNA6ZvQChGj5HmlaOHqQ8EeGGgFyEE
      x/t6ADAtk8OdHYR9XqpGlfWr55nlBFa48e62hELw1lmy2RT1Vomw206z20GH38Pw2jqGaaI9
      0OIj8DudHLTZuJpZpaWhh6HyHgN8WewxwAMgLQu5PMXJyipzI+NEvG4aggEURSEWCgEgNqdr
      VVWJBnyARNc0fv/wAH8zPs1aKIbIbKBMXsVdypIONdNnZQn5HYxYTpT0KsmC5MWONjoiYfR7
      xCYpJWXDYDmbQ0qJBQwLG7a+Q4yWdCTydh/28MWwxwD3QEoJuRTh+ZuUFsYRYR+nY2FWUmnO
      j45yqr//LqKTSMACavkFiqIwHF8nWd+Fa+Qcb1oJ2ut9XF/J8PnoOdYaYxwLeHGXqpwzTV4P
      +BFC4HM47uvLYibLzzfyFNBRixkKwQasQB361RuUXAHUSDMEIl/RyDwlSPlrZcrdY4B7oCbj
      9M1e4FBjHaG246wlU3Q3N3FQUSlVKvfMuDWnVaFUwuWwE08kGV5cYajhIC1LIzhXpmnq7sDn
      cFCqGJxsbmRsZRVbYz19IS/LWS9C2ZkYVrNZ3p5f5nA4RG/Qi03x868LcUqLG/R57bztaMLY
      WMa2vkBDZoXlaDtWc++v9YpgLU6grswij7yOVUgj7C6Epn+tfdpjgG2QpglLkyyurOKlQt3A
      AP1trbBpcXHa7ZiWRalSxu1w1EQQBLlCif/y/ocslyVK/0nKwSZCi2N8Z7Cf81OTvNzbS8Bu
      oycaYiASQgEUBGdam7E/gF69Dgff7Wihzu0C4NP5RZxC4Y3mCNeTKZTsBuQyvKwVeb61kcXU
      HH8d1yHW+dUM1hNCVkrI5WnoPlz7vjSFiDRCsP5r7dceA2xCVkrIz/4V2/5TJNMbNEeD2HWN
      qxNTdDTU43Y6qVSrnB8eobe1CZfDTm0FEKyn0/i9frrawlzxByknVsAycOsaL3R3A3C8tem+
      ezofMlk7dR2nfmd27AyFOe6wYVkmc+k0b/okXo9Goz+CIsCmKjixKD7lcXkakJaJdfk9WBzH
      dPtQ/BHU7sPIahkpv4AeIyVsLEOoHmlUYWMJGjq+0Oq3xwDU5H4lPk27buJPTHAzVM+FiRHe
      u3IVRdHI5LKcGhxkYW2NbDGP3+2iRvw1i43DZue5/fv4SRL0bIo/lTOkbQJLcp9i+0XR4K7p
      CBeWFmmw2zjWWI+y+cInNxLcsHkoN/x6zP7SNBBSYmU2UIL1iNV5RDKOYlax3AHUT36Meehl
      wtd+RaL/BYg8wGRcKUEhiwhE7z5uWagzNzF1G61z12iWBc4HophO7xP3dY8BAEwDZeo6Lx/q
      QlXgViFAVXYQYJpXDh3g+sQ4l8dHmcyUMSsWC2sJ+lqa2RKNmqNR/n56jbVAG9/fGKIrHMBE
      PBNXVaZU4nRrG4oQZIolVnJZLlZ1xjtPgfh6g+aklLAyi2vyMpVqlRarxPzR7yALWdylLI5g
      mPTcLY54NIY/+wnNDfUk3A8mWmFZyPL9a5pQVazj30QOf87vNQdx2+tZnb/KZM+LPOmg7zEA
      QLlAkyhTLldoa4iyf3GMS1UXSvNh/svEEnkljCeVJaIqnO7qoLelia2Rnlxc4lZ8jfn6/by+
      dovBaAAhxDMb2Jc7O9FUFdOy+HxpmamyZO3U78JTWmkAFFmzbSkCTCnuJ6qtghr3HZeoq7MY
      5SLOfJpy9wGEzY4xP0au4xCmVUVLb2AaEuPYN7jujYB+v/XrNuwuRF3rjj9JyyJYyeG2N6AI
      WDW+GPPvbgbIZ1AqBYxsimyhgNvlQlN1vjnYzfTP3iHjjnI4FuLWyhrf6OuiN1a/+c5r/yYy
      WSaXlrju78IyDULCoFCt4n6Gmw5qqooEPhqfIGeYWHWdWLaHENGTQkr6HQa6Ag4FMgYsVFWy
      pgICVCS6kJSk4F4OEIqCdfBlzA/+gYo3Qrb3OdTxy9gaWpDZJO6VSTIt+7jcfwp0+6Nl9of8
      LBNxHKszTPsVhhcWwNcMhRQ8YbDgrmYAZWMRdXECGjo41NGGy2ZDAJqq88OXn+NvP/iMFn8z
      ffW9fDgySU9DHYiaaDO3ukY6nydbNaClH4TCj1WVl+JDnG6J8QDr5tOBlMwmU7Q3NnOz5eCX
      bQyFmifDKyQm8EbIwKlCyQS3Jlkqm/zNSo3JLKDyKDnjzO/W2lVUrJ5jSAGUCiT7TsDaQm0M
      H0L8tZwIHnqOLblM0Kbz/ugE3z10gMKtW7RQZqjvZYTd+dhPv+syLaSUGNVaTSCzpZ9y/0nM
      5h4uLa0TTyRIZnNYFrjsTrxOJ1cmZ4iFggRsClcnJ6gYBkPT02QLBX4+u8Zs9xks3Y7QbZTD
      TeS/giA1IQQdDTE+DfcgXE+u+G1Hp83iL+uKNGkWnU6LPofJ/77s4F/XdFwqCARXc+rt2Vgi
      sBAPdWYJmx1hcyCFAFVFKGqtn94QdB5E6PZH9su8dQ5ZzD3w90p9B7c0PzG/D49d53RPF91O
      BcWs3magx8GuYwAA5dpZRHIVASjBelB1iu0H+MlUnH/3818wOjeL2+7kj18+Q9YSLCdSvHns
      CIe7urg4PMJ//ugT/mVuA+P0d8mHW0AIZD6NmBum2+f5SuI0DQnVunZMy/pS7WQMCOrwZqiK
      CpwJGAgJGSn4IK3xUUrjRuGrFRSEEKg9R0B9sJNM8YUQJ95kzh7E7XDQHo0yXzRgZQbls39B
      VsqPdS/1r/7qr/7X3bZR9uj5TwmuTbFhCCynF6plrFAjLal5/uS5ozRFolwYGeWfPjpLwTCZ
      XVoiXyjQ0djIheERbLpOwRXAbB1AItHi07y6cInXnBYtPs8z9/SXDYOPE3lSpkR4/F/Km1qW
      gj6XRaPdotVh4dYgrFvcyGtMlxXmKgpyJ0X4GUOoGkJ9OOMJVaPoDXN1agpXtYBAoG4s02xk
      EdUy+XDzI8MudqUOsJIr8DsnjhCdX+KD8QSHtDKXg73M4uTW7DyxUIiFjQSxWBPHOlpJZrO0
      RMIIBK8fP8bS+gbvza2QzCWJzV7jeVuFgcYwQqhfCZ3MJBLMBltQ2ga/dCiBlFAwBbMlhbRh
      sd9Ts/wEVItCVakR0K9vdAXCEyB34BV+klyF9Cq/U6fRFWxnOZXmnwspqu7gQ6/flSKQ7vLw
      40s3CDjs2CoF2rxO9q/cxGzqYc5Q+dnla1yLJwA4e+06hzo7iEVqQWd+t5v1dBqz8yDupXH+
      MKgzGAp8ZcQPsGpItPZBxENEhMeFBVzIqVzOqSxVTCqWxfmMhleReNXfnALCIhBFN6sIaTG8
      nuTTrIkRn8XKJB563a4TgYQQTAc7GUpXWYsv4QxFGVtcxjINMqFmEo2DFFv3oTZ2kU2s4ZQm
      ZqWEz+3Gabfz0fUbXK/oZFoP1MyPS5NE7Dq2zUyuZx2MZloWH0/PkcxmkL4w6LYvd08hSBgK
      Tiqc8RVxqzrvpW14NMmrvgrDBa2mzP4GQGQTjHtijIa7yURasewukBbC4X7gNbtOBJJSUixX
      wB9mLdqM4vFjhTvxD71HePQcif4zuJYnqPginPTC+ZU0cYdGOj/EG8eOkVMdJA+/jlAUqkLh
      rKeF5bkJNKNCwOXiOx3Nz/wZBkJB1ldmSEWaUdy+p9LmhmnDEpK5kooBpA3BuqFiF1B4Knf4
      4rBSayjbwiGkZdWYfpMxt6w+RusgSElo+iq9lXU+1+ugbeChbe9KEWhiZAiiLQh/BKnqSGkx
      5W1k48g3QbehColmVEBR+dOXTnFqsA8p4N//4h0uOxruqtPjSK2QNiyaHDon6x4ubz4NqIrC
      4cZ6TsTqcBbTT23FcSrgVQVnsxoSwYap8m7aRuEZC3ZSSmQhi5QPtmYJX/iu882xS3e+WxbW
      3AhYJkII9KUJvucp0WqXmEtTyHz6offflQzQ3tyMrJapjl3GnB9DG/6MHwQlXVPnkOl10sUy
      +1JTnO7toSEYoVAssr+tle89/xxNK2M1zREQNgc0dtGkQXvQT8T94KX2aWE1m+Pt2QVGqsoD
      Q6m/CNZNhbeTOonqNpL4CiQf59RVXlk4j3N9/oHn3FsYTG0bvGPdqZYwl6exNpYAqM/Gifnd
      NEdCfCeio8+PYhu7iJwb2dE/sOtEIIClX/4jwtdAMLNKq9fBiLOeW4kcWj7Nt5wKv5y6xnm7
      m/FUFo+mEC+b6C4fp4IOVht6uU0ZQlBt6mF0bZ5Bs0o8kyVVLFIVCq0+Dz6746mbRN12G3Nl
      i9VgABPtKb5AwWhR3fr4zCAtC9LrqEaZUGqJF/USppSU9MebPIQQ4LxzriwXUVy1UjKOz37C
      kZgPIWrjFHA7+R1p0N+gc3Nuip8OrcG+uwPmdiUD1EUjrI8O0dTawtHebmY2YKxYRGnuwFi8
      gW53YL3552RsDjLFLFSrFFOrfJhYRsTq7iNqo/8Ubw1/Sq4gEZEuLLcf98o0r8tVDtVHn6pi
      7NJ1/ri9gb+Jp0k8wsT3xHjGyq6UEn3iMvuyixxtjCI8cD1V4WagE/yhB15nTN1AaWhDcfm2
      N4YxfoXGhRvIUh57ZpHnWurorg+yFare21BLtpFIOurCtF4fZa50GLaFTe9KBnDuO40tUWAl
      k6NcNSiMXscbjVEVjejBKD/sauWfL/yMaqCORsXgaMhNSanyvtNJ0Xv/i5ION5nDbwASsRmS
      nAs18JOZIYKpOG1B/1Pru2FZzCcSDAiTc/WtXyyh5GuAlBbK+GX+IqwSburk86UVzttjFHtP
      IBX9gauOlBLV5QWn5/Z3fW2extUxjnoUek4fBGmiKgqKomwLVpTcEXgkHoedcun+0OpdyQDz
      w9cxX/8TSkNnmV3dQIRjfKO1jsnUDLrNTkesgf8pEqZQKmPTdZx2O1JKJq4MMWaZwP329xoR
      iru+y6ZuRoamaQn4bievfFnoqopN07i+vIF8928Rb/ybu0SCX1fIscu8Zm0QtMd4Z3aZoa7n
      qdgfo9/SQhZzKEJBVito19/nu3V2Broj2xase8lY3vN/jXGCzW2sODx3nbkrGaDz5W+TyEBx
      4DnOpTegkOHD2RvYAxHSlp3K+Stks2lO9HSxns2xkS/S39TInOWAJ/C8CpuD840H6UiM0Rt+
      WjU9JX6nE0MK5LFvPFHk49cFKS3UZJyOjjDvDI1wo/kols316OuMKlgmSsd+ZKlA5d2/5XSd
      m4HowBNJa4VymbMTs8y1Hr/vt13HAEIINN0GVACBLGQRngAbAy/gTK9SdAe5HmlF1e3M5VNY
      ERe0B7iWTyEORp+o/ieAqWos5fL0hAJPRcQuGyZDy3GidfUsRpt/M0qn5zN0WXnSeQe3Qh1Y
      jV2Pp2+oKigqVi6FzGdQwo1IkblH5Nv6/GCv9cczCwwLD3J6BMJ3p43uOgaQUlIsFZEWRK++
      jSOfIBNopFwu82d9TeTKy/zrUp582wFak7PEFSdmMYTMJbGWprCcHkTnwVrt/seAcPlYMWEr
      gf7L9Ht2YwNVVfE77WyEOxD6b4AHX0rUq+9zuj3GhflFzJMv7Uz8Um7qM0pNejeqCN2GzKcQ
      86Po6TWidpXWYPjeCx9466n4KhOZEjeTFYK6ybqpokxdRW4GPxJt3n0MADA3O4vEgZVL8e0j
      +/mbq+N0RkM0BP1MxlcpNPZwZOUGg3Ue/u78Vd7o68DuVChUTHqbQvzHiQtke049Fj0Ll5fx
      cCfFag6X7YvH7oyvrfHx5CQZNNSeo5Tr2r5wW18lZLVMWBdki0VmW45iqQ9g2ukb+DbmyR59
      E7m+iJXPorb1E5v4nO+3BfF3ND9RkpGUkqGlFWbVAK83RzjQFOXK9BydwRI+h41fjl/mcqW4
      Ox1hXe1thKcu4XV7MEwTd34Du2Xw88tXeTdtYQqFvoCLyUSKeodGSyRIV2OM8/EE/3LtFtb8
      GLLy+AVIKuUSY+sbX6rP2VKJZKWKXimRdgXhIfEtv07Q5kf4fleM8XyFUn37judIy8K/OEwr
      BfT4FNb0EGqkEWt9kYxiw21TnjjDrlCu0Bzw8Rd9dRxqiqAKONbRQsjtQFMVXutu4k/E0u5k
      gKoF+cZe+mN1NEUinBzoY6pgsaJ5WOs+jS2xRFtdhJBNp2xJQj4fI3PzpOen2Fia5/cO9BId
      P3fbI/xImFWCDp2HLdcPQ65c5khzM69192BqOuZvgtwPYFTxFlPYNYUNbxQeILLJzAbPN0X5
      7X3duNNxNCRy4jKxm++DovDB7BrWE2R5AbjsNg53tOJx3Mk93q472DWN9khgd4pAU2OjVJoH
      +dXCKMXrN5ktmTgtSda0gxDYqiVURaHO78Nr06kaJv2tbTRFIswsLxMLB7BfvUq1WEXrO47w
      PdiJA+DRdVZzOcZX13mltxvtCRXp2USCjVyOIy3N5EyD935DZn9ZyNJdXMWyWtGr5QeqQa5U
      nLagj1Q+Tzmf45jDYCGb5VRHIx6HxbuTKYZtkn0tjfdf/AA8jm9EsEtjgUqFWrXlaqyLc/5u
      5sJdnGjw80adHZlLkffX83+9dxYLePPYIRx2G26nnYZwkNP7B9E1hYaAn1h8mMCVt5GF7MPv
      19TLWwWdK5kSmWLpifvrdzjJVSr889QcbV4nvvnhL7qYPDaklMhiDmPoHObMEHJ+DGmZT9aI
      J8A5w8nF6TkG9QpK4f7ANGttgTesVYJODYnEVkgxWB/GbtOYWlqmPRSgzW5imU9478fErssH
      AMiN3mQ+X8FMrWG19CMqJY7ZyjQEfFxfz1Ft6KA1NYtPV2mti1BLBYd0Lk+2VMLjdNDT0oLT
      ZufmrRs0lZOkbW6E5wG2fpsD3/IEEZtCMpWgJ/r4FZ2rpslbN4dYyqRJ+utJplKkhIbZ1Pts
      YnY2rTHW4gTVsz/GMz+MujxFND6BO5cgH2l57Cw0IQSioYN0NkuhkCebSiAdHnDc8QHIYpb2
      fJymgAeHrnOtpOI1inynv43mcK08ZcDlolipEvV/uQIAO2FXikAvdDVjDY3wiQhBpYSVXEGJ
      gNNuwzZ1gUK0jbHO5xi5+iFt0/O4VMiVSnjcHubTWf6bl54j7PXS39ZG1TD4bOgWvsqnZEMx
      2KHigZVL0WBkKRby5FWeKHxBAIdamolnskQCTs6tlSj3n37KI1KDlBJzcYLqpz9FrRTp9jg4
      3NbIRrHEar7AyuIEMtoJsQ6E4+GOrK1nFLqN3MDz5CwLKkXqr73Den0PRmN3LZnH5sCm1Jaz
      QrmCYhQJeGttexy1sQz7PIR9ngfe68tgV4pA8yurXJiaA1VHG/mc/sws/+nCTT4dmSSmQ/X6
      R1gOD+KVH6I7XUR8HmalkxtKkKQrws+u3KRUKaOqgsM93fg9blLz08h8Zsf7Cd1OxuZGhOtJ
      VKwnmrk1VWVfLMZrvT2EnDbMniPgjzz12V9KibU0iTz/CzzFNG/EovzpQC9hp50Gt5MTjfVo
      ZoUza9dQzv4j1tJUzVO7U1umgX/qCmIzFl9aFigK0u5iKdrNwPoor028S8P4OaxMgitrGSpV
      A4BSroCUJsvJ9BOVN/mi2JUi0EfXbpFIpSjZvYSo8mJrhKmCibBMvnvsADcvn6fLbrHui6Ev
      jvG9E4dYS26Q6DiOsDtqYkh8gYGWxlrMj4Tr62m0/hM71rwRmk4u2kraGaAts8hgNPzIyqGm
      ZWFtZj6VDYPLK2u85ekgHet7JlGb1RufUP3kJxzyOhgMBxhPJClUq6zkC3SFA8xlc5w5epCB
      5hjtLo1jap788iwb/kaEqiGlhbU0VXv+aoXgzBWsUD3V9WXkrXPg9qHO3qKxksSnCl7rbmTQ
      BbbEMkO2KI1Wnnqfm9GcyZWMwdL8LLqmU+d7lML/5cZiVzLAj89dI3foDYQnQDE+S2F1kQ13
      lGMNQZoDHmyahmpUmJ0c5Xs9rZimwUcFG1V/PcIyCdlUlqfHyeSLdMdiRAJ+ypkkC5OjiFBs
      5xzUQhbfB3/P/miQZn+AR724bKnEv4yMMVKy+EgPcaP1ONVQ4zMhfmN+DHP8Eo5CGk1Ao9/L
      S+0tLOcLnG6O4XfYSZTLeAIBvG4nAY8Ln9POgN9OZfI6K4oLy+nDNXuTkxtDLHnryUY76F4a
      4kh5hWouxYtqhteiDo7XBegKedGUWmBfq9+NbWORlnAIt12nXMwghc6ZxgATayl66+/1/D4d
      bMWK7kod4L/d38rV+C0kAiXmJeQIw8QUR4+dQVNUTvb1cHU+jr4wSWPIj11T6bJnuekLgt1B
      z9pNprsHGZI2TmdzRPxevnP6FK6r17j0yT9TPP1dlPDdJjt1ZY42nwufXbu9scbDMJYtMHXg
      DaqBBoSmP9PkLCXUgBqI0lRK8vv7egk4ahOiS9NRlVpZlIFQgHMzc0QD++/sjaYovNERwzlz
      jQ8dPjRpsqK6IZPgWHKCN3pa0RTJic7GbTrP3amPQghO93QAUK4axBUbqqoQ8jiwLa88w6eu
      YVcygM/l5PmOBqA2DxuGideuoW4leqEw2BDFqwryxRxL+Tw5S9TKjzvcXGg5hfBHqJu5jMNh
      Bwnr6TTP7RtEEcN89M7/i3zljxCxjjs3VRQOtTTRHnp0EnuhUuGi6qMabr5PWZZGFRT1ThBc
      pYR8nEKzD4CUEpla5XAujsvrxm+/Iw24bRq5SgW75mS9UKQ+GmY5mWYivsbRzlbcdjuKotDs
      taMU05ieEIFSnNjGDC91N6Gp2yPy75bnt08AlpR8OjxGQcKUGuYPY078LievHRzcqce3W/ii
      2N6XXckAwF2JE5qm0VJ3p+rASiJBXTDI0voGP7qyBLqN8kt/fIfIwjHMuRG+H3PisWtYpsU7
      Fy6RQeVwYx39jTFGxT0v3O7EWbVRszvs/PLSxSKTa2uMaV6SvWfuJ37TxPjgH/HUNVP0hRDJ
      VdqnhljsPohx6KUvNhCWhbj8KxAlDrQ23pawLCkpVg22Ki8GHHZmkmm6m2JMJ9P8h+UyQTNL
      k2owLXX6MyNQLfN8W3TT+/pwBXb7KqgIQdDjYSG+wXe77MR8ToQA9Z79DrYT7tNaEXctA9Tm
      oHtLfNc+r6ZTfDY2QbpqoVYrZGN9CK1WOVrmM2hL4zirRZJ2hYjPjVAUnA4H46Ferk1fZN3u
      h7r2u+5WDTZwY3KckNOB7Z5Rl1IytLLKB2WNcrCTQss+pHa/XiZX5wgkF3GuTvJiNktDtUK7
      ZXAhs8Iv2/qxAnVPPApWao1+SrhtOk2+O1lX55ZW+UCvp61U5QdOiVPXqVYygOBQYwNXUhpT
      9ceYMg0OL1zkzfZwbe8zIeARxH/7ebYxwWBrE4Obnt4dg0Wfkufv3nZ2pRm0BrnjH7DY39HG
      wbZm4rkif/TKi3wzqKKlavKoc26IPw1Z9OYWCDhrFh8h4NXDh4isTrDSfACOf/O+OH3h8nJd
      8fF3Fy5h3uNRzZXLvJMqkzj8DfIdR3YkfgARaSQbamEwneJMJU+vNLEJBdUyvuAQSKzzb9EX
      9BNy3dljwJKSlWAU8+gb5EoljM1lYLMKDy67jrU8h/v8TwlMnKeUz6IKUJQnL6O4RZCCTcfZ
      DtT/IOLf+Q3Ku85/0Oct7GIGgK1tTu/8tciXilwYm+Bc2kLWteG265jFLMHr72IlVig6ffzD
      Up4r4QH+7uItEpkshmlgt+n83v5uRHK5ZqffAVmHj55Yw31LO9QYRD5iiyOh26H/GDMONwaC
      IoIPA2Heff3PsPzRh15735ObBub4ZboqGQqVMq7NDfmklJRMkzXpwDf6OT+M2HDpGkKAUSzW
      9lNTFF5v8mPqDl70C77d8/gxOjv25R6ifdxrHrfNh7W/S0WgnacpKSUzy3E+LNopDp5BLozx
      n66NsRLtxhZyg6ZjZZPkg02oTd0k3X5+dvUc39jXzX/+4CxHe3pqzh/D2DHyUWnpZTU5edca
      L6Xk2nIcWo89XgBXQzuzP/hf+N9GL6LqOvl9z2Fqj663f9dzGlWqV96nde4aveEALruNffWR
      2vOnM/wcP6lKhT/QEgQDNa+sBJq8buZX12lrqGNffYjOoA9dU9Ge6m4gAh4xaz9N7NIVYOdB
      XU9neGtmnXLHEYSioLT2s7bvFSILNxGRJkS1jO5048quYdz8BDsWk7F9/GwhxSBN7e4AACAA
      SURBVAsHD3IpUUCrf3CsjLA5GA60kSzcHRA3ovvIRjt2vOa+NlQN4Q2SP/4NMode2ZH4rfQ6
      5urOhaZktUL5k3+hY/4aP+jrYCB0J36pWDX4WUaSGHyFblmk238n31ggaPf7WE6kbh9z2rSn
      SPzb9bGvrsrFLmWA+yGl5PziGoXj30G6t5UxcXpJHPkW1fp25NIUWj7F/9wX4X/s8PADdRWX
      CksDr/CWu4uUzUMlsPOWn1uotu3nrcU1LGndjnE3hP5UHVwyn4UHbBBhxmeoWxrhO51tBB0O
      dE29HXJQNA3KTd1I3UHB5rorFKFimlxOZTnS1/fYaRBfoOf3/L9lqnh2DLGLGeDut7ieTjMV
      aL+7+BKbipnbh1BUlAPPY5YK6CpE/W4668K8oSTxDX2A9EdRj38DxR95+PZBuo2Z1kP83eQi
      H84vkq+UWXc9PJ/gSaE0tKHUt9Se0jQx4zO3f5O5JAKI5wuAxKaqJDdDtC0JlmYHo0o5n8Xc
      jAxdKxT5aD5OW2c3WctBWT69HSnvJfF7Fdkvoh88CXYpA9w/02xkcmTc9Q++QkqsbAIz2kIy
      V6uXLBTBkbYm6ow0MpuAQhb78KfwgCCxLRgNnUwc+y4f+zv5Py5cw2rt/9JPtB1CUWoKs5TI
      bAJzcfL2b0qwDlNKuoN+qqbFXCaLZ9P5FXE6eDV+nerZHzNfMfm/R+f526UM/77s5py7mZl4
      HF2YzyYKmy15/6uT/2GXMoC879vmUOeSD05zlBKEStTME/S6bl9rYWKWSwi3H3VpgjdaQoj4
      1EPvLxSlpid0HqL4W/92xxDqLwtpmchqGWPiKvqRV+/c2xPE7nTh0FRuJNP849QCvZHaCpQp
      VxjeSKMdfQ376e+QjHbRtrzI8YkrDJTinOhpw6dWsCtPMznl/snoYXja4tCuZICd0BWr56Xc
      eG0m3wFCURAuD5ZpUq7esbsL4MWeDjpG3+dNd4nOhij68KcPDBW+r13tKcv/UmIlVjA/+hG+
      t/8aRzByl3VJuH2Ue47zyXqaj5qPYrYfRNmMaL20lmDm8JsAWPE55PoCSrVIu6zSEvajiqfa
      1S+Ep70q7EoG2Okd2nSNY+1NaBOXUedH7lcipcRKxFlrGuTDoYk7bQlorY/wR0d6OdpWj9/t
      4pW2Opi+/mwf4kGwTIyZIaz5MY7IIgcnzkPujuVGCIXs4At8eOwHpBfmMRAsFyuAxBIK6uRV
      KBcJrc4RdbjIlU3mcwWMys4M/SAl9d5jD5u5vwpRZ4ebgtylDPAg2G06f9kb5L8PFdg3/zmU
      7uyNIgFj/Arm4gQbFWtTUrrz4lS1NpRCSMJ+L+XFh4tBzwpC1dA69mPZHfhUhWXNCfcq9oqC
      mLlF95X30DWVS0XBaqHEbMnAOvASwh/BMTdCy+RVvEaRM5isLy5Tqty9B+/DiXr77zudJ+76
      u/3P9mNPG/e2uccA26AqChG/l5DPzXe763g9/inuqcuwOAGVEmpDOw6hcKq1/qHBXu2xBp7z
      gjF6AVl58iT4LwNpGsjUGqgaixWTQ2YO28b9PgFF08kLheq1T1iOL/If8g4WX/ozLHcAygU0
      o8I3XDaOuWz8gz/KwOmTvD8yyXKyluW1nYzuDlITCBRELTJo8/P9MVdb5F2qVJlZWefziWkW
      NpJwDyPczUQ7lUR8NIrmDlarzeZ2JQNsU3sfCEURnOpq4S+bVP5AWcSxMoVqmXwvUKar4eFJ
      GoqAF/f38AeuDMrFtx+6/c/ThKxWqN74lLrPfkyrrHBLdaKZBm2Tl+GeDbWr3gBFux3T4SKj
      OcmHmvBOXmRw+F2cF35O2WXj46pkWAqOPneCrpZGTh/cx1Iitbnw3SFMcZuM7iVSucMxSOcL
      TC6v8unwBJcXVijaHAzsP8DQ8iq35hYplqucvTWKZcnb7X9R8jeloGRptxfre9/7Lg2FqEEi
      KVsalgSXWrNsiE1X/Nar87qcmKaJPrNOwRFC19THUgQ9LicD7c0UKtOcHT9PvufUM9cgZbVM
      y+x1ftgW45/wUXSFyS4PcSK7zNT0NYzOw7Vo1pufEFid5bBNo0k3iJTW+OXoR/zWK8+jq26q
      XTVz8IXRCewNDfS013wKIb+X66ZkI5sj4vOyff4Ut8O8t1t1ajP4ndGsnffh0Ch9fX0c6+vD
      btM300olp44d4frIGMnlFWLt7UytrtPdUHe7zfunLLHj0dvjIaFgauhi5wkoXdilpRG3y4FS
      QsHSbls/t7tdtlYKl9OBL7kACOKZnfdMfJDD5mhPBw1W5pHx8U8DQlHJAWnDBKeLuuQyL/ic
      dLqcvDR5AZFex3b5PVpufcpv51Z4xanRowr8CkRUsGkKQghsmoZN03A4HHg8LtK5fK1ihGkx
      s7jExNIKVcO6RwG+W37f+m6Y5l3nlCsGDpeLplgddrsG4s6CEvB5eOnkUZ4/cYSutmYMu507
      K8w9uRH3+AwM02R6eRXTrBG7lIK8qaMIcKlVEPfL/xcnpnfrCrA1qBK7YlGVFlWpoIud7du6
      pvLbh/v58fAkdW13O8vuJXp5Z61lJZni3NQiC5kysscC9RnPN6ZB0V/P3/UcpeoN4j/7Iy4W
      sxz0ulm2TNT4FN6ZG6hImmwaWwRkAomNBIVyBaftzr7D0rIYnZjC73GTLhRJZnK8cewwqVye
      0YVl9rfVVoa7zKzUZvOVVJqR1XVMIGTXaQkFWctksesalmHgcm6FX99NyNvRUB/lk2s36Y7V
      47TpeLdCtmUtZDtXLOFy2NFUhVsz89gTKT6ZmqFvsB+vN4SChUsxb/PO9vwDy7KwORyIXC4n
      3V/B7oa/LpBSkhu6jiUNtga+bCqowkJT5OYgwZ3o9zsvx7QsFKHsKMlUDYNPppdJp7Oodgea
      zcGs4qaUyWAV0hQOfxPhevqFnXaElFgrcwRvfoQIhNlwBLCn1nj++sdYfh85y+JbTg27Iiha
      kg/yZTrsOnOqjqe9laP7BlEUwcTSCm6vh8bI9lCN2sx+aWyCQqFA2Ouloy6Kc9ObLIErM7Ms
      ZbJ869UXURWFhfgqG8kUQZ+XzOZqsr+v+5HRr1XDYG0jSTqXY319nd5QAI/DQalSZWhsAq9h
      kJDQ2tpMfGWVMz43ihCcT2Zq9VOlpKkpRkt9zReylswwvRQnEgxQsSy0UHh3MsAv//4/bSqm
      d4g7Vygy2NlGQziIEIKZ+CoIhbb68CNfVLFc4WeXh1hWfRSlQrGQRz3wIkK3cXj8VxjlItMl
      hfwLP0RoX8GiKyWyXIRKEXPiGp2T13hudZH+Sp6EIvhMd+Bzu3jO40QBPilWCKsKVUuypqiY
      0ShVaeEMR3j5yAGkVRspdVuSj5SSStVgI5Nhcn6RF/f114RAKfnlyDhnjh/G43r0LjCPi6ph
      cPnGLYZHxznocXEwHEBXFCqmRaK0WcvVVYteNS0LU0pUoTCeTjNTLKMJhVannYjdxkeFCv0D
      vXS2texOEegFaW2uALClSJVsCmM3hxgTCmm7iytlHbWhk1dSczzf1/ZA/bVqGPz83CV62zuI
      phPcML1Uj34PqmXEzU9ojIbxaFCZmGJ0+jqi5+izf0AhwO4k/Pb/x+HFcY5W8vioFeSKSslv
      l/P8FIjbbSgCypks3sV54rqN8rFjBHSViuqgVK1wYXiM+ZU13Dadk/v3EfJ5N28hsNt0Urk8
      PuedsGnDNGt5xpui0NPYwE9KiaoopHJ53njtZSZvDJGrGgTtduyaRsxz9wSuKgpbhs/+oJ/+
      IGyt6PPZPC6Pm2Iuh2lZu7MukHHzGnJbeQ6BQFMEdU47q/k8l0oqUaNE0RtmKR5nIOrDad85
      xn8tmWZ6agabNBnobOPC9CKGlLWNmxu7mLRHuTo+xbqponkDEP5y2VOPCyEEhdZeVqtlDsfn
      cN1+Xsl1VcftcvJZvsytTBZHoUCoWmaiqZXTp0/Q2VDPUjbH0e52wk4n3Q1RZuNrLKfSpItF
      gl4v+VKJs+PT3Jic4rUDg2hqjeRURRByObk2NcOtpRWuTM3RGA7j/DKbg8zMcW10nIDfT19n
      B81tLVydmqNZV2s5yA8tFHG3AdVj0zEzGebnF0lUqrtzBdgZtYE6Fg5x0KqJRz+ZvsBSrsg/
      fl7mxOAAA/VB7IqBEJAvljBMk0wuzzGvi/VymXLVwJ9bpTy0RrJYRn/l9zHD7ehnvsvdKthX
      9EQuL/nT3+FX8yP8cH2e2+ZEy2IchV6PnUNOPz+rCt5KJuloaODt67egUqGruxOvo2aFsaTF
      Wj7Pimmj1NjJpQ8/JlkxqfQc51u9Lhz3EPdGvsDVko1c5xGshQlCQ8Oc3t/P8to6um6jNdbw
      WDtMWZbFejLFxOw8b77yIopQQAg01Yal20iWqvjsOra7GttZoS6bJlXTYipfJBkI8vLrr2LT
      9d3MAHds07fd9kJBFxJdEUxlcozh4vdjbj5X3ZxdzdEVCZJOZ1hZXye/sIAwTYI2HZuqMJ4z
      eP/zYWK+ELKuHa2uGzNYzx3j21dH+lJat/crRrdh2JxsJ4xmLOK6jtvlRhUW0+0HKHiX8WkV
      9nd3UB4ZRV1f55pN52BbKwsbKdobG1mqO4Ro6CCXWcPmdGFYguKmRUZsmhktaXE2bZE5/E04
      91O+2RKkXFK4MDRCS3c3QtP5/MYtTh8cqAXYCh4oJlUNg4s3hzl6YN+mCLplMVLo27eP+ZVV
      cqurdJkVmtwukNsrUtzJMEDC58kUaiRM1759DIaCt++5ixlgC3cGrOa02TymaLjddjq8ktnl
      OC4Nbo5luTy/Rqem8O2oH00RzOeL/H3kIMVj/cjVeZY9fiz/090d/klgxWfYP/YJLkVgWJIM
      gnByhTlUdFXhvc4D1CdWuP7cm2RNld+7+R6/Gx/mn498h7nRCzRmcyznC3S6ncwuLFOtGIQ9
      LoZNB2asE6Go5Aefh80KDh8Vs1z86J/orqQ4vH8fwYCXFqXCUqWI0nUYh7rK0f5OPrk2RF20
      jnK1TO/Bfbx35Soul4uww05ve23D72y+QKFYYj6+gs/tRlEELqeTcDCw+VZqxCwtk0goQDQc
      wujt4rMPzyJzBXRFwa6peHUdTRFYUlKomhRMA7xejp84eltU28IuZoCHEaiCV1WJVgvYFDcO
      XWUimcS5Xua/i0VwawoISdEwGUlmKTR5UWwORHPPtnXl64FSyOFcnae/oY6OuiBSwpr7ECv5
      Ap8ur7PyjT9nRNWgVMD4+Ee823WS35k6z+kb73O2+yRnhULMvcqcXcVvt9Ec9DGxskbG3YY0
      qiiFDQLxCaSqk27ZBw4P+Re+j/zp/8n6++9xXrMRGBiA+VGM7iO8fWWUeCJJNpnk8/MX0G06
      sYZ6Xn39VYSQvP2zd2iJ1bO0ssbl0QlijTH2HdhHNpcjvryCy+nctD6JzVwNZdMUXRtlXbNx
      5PQplldXsaSkUq6QWVrCVy6T1XUI+PH7I5zu7kBV748J2pVm0OLf/cdtViC4P36l5kmsWhKb
      IkhXqxiWJGjXbjv2b26keLsoKPSfgVDDI7dJ+qJ9fdKVxJod4fd+9u/Q9/UzUFfbTd2S8NOM
      wVDnaYxQrJZYPzdC8NY5Em/8CcrKHEeuvEPIKPFO3wt0F5bRxm+SzedZ80dwKlASCg2hEMda
      GunyOTGk5OpKkg1TwaEq9DgE50dGyQPHDh8kY0o+8u9HTa3yJ4eaWZ+dpKW5mUDAx40bN7Hb
      bAzu6ycej3Pp/CVm5uYRisLgQD8N9VFW46sEnE729XajKdpdwRSPGhPLssgVCjgddlTtweES
      8bXEbl4BtmOHKBMBts0Jw2/TN61GtSX446VVhitQ+vb/gFC/uHXjkb0q5cHugnIBVA1hczzy
      GufyDBVFEN5mmlwuFLkWO4ZcXUAaBmqsA2lz1kRmwGrq5mKkicAv/xrVpjFV8vKHmRRv+UIU
      Og/jWRnj3x4ZwOuwoYg7s+gLLfU1nwMSgcJkKMjK8gqLK6vkLIEM6VSdPsbHJ3nt1MFNAlY4
      cvQQ168NMXxrlM6uNgwJXq8XhKBQKKKUKpwc7Mdhd9QC4cT9xoPt4egCgRRWbcJAQSgCn8eD
      lBYS877rpIThmQU+N9y7nQG2KUp3/X/3se3e4IJhcmF1g+KR17EU7ZmKO8LhRgDGxjKKN4Ss
      lFAetA3TJopuLwYCVRG3g8zmS1UIRBANbbf3L5DhGIkXfx8UDe36x9gScVKBRtT2/ZjZNO9e
      fp9MLoeVSZAomzh0W80Ks0nsd/ICNmN+LAuPw8GbL54hFPDzr7dmwO1DeALMjYzz4bvvIaWk
      q7eXlrZmDh7cz+raKr/4xbu4XC76+nuYm52nq7OLsaFbdDQ38jizPWy9IWtzkrI2lWH1PuKH
      msJtWRZDS+ssB/x7ItDm0dv/3jfT3BPrbknJ/zMyxcIrf4YS+Wps+rWOSOTm7ukPPa1aQRay
      NI19SlrRydq96NFGWgrLdHkUPF4Pum5jeX6emNPOW0mVfNdR5MwwovvQnTig9DrGxFWkbgfL
      RKTXaQ54sVfzHB3oZWphiWoxS3NTI6VSGa+m0dfTwdlPP+fVk0fRVI14Isn04jJN0TraYrWo
      znKlzFufnOPQyePMTM/y4otnqFQqaJrOxYtXUIVA123kEkkO9vbg87pQhEaNGbbeh3VfSPYW
      8d9lbL7/ZdaUd2pMcGlibrevAPeS/Fbg7j3BXduYIF4osRhoRLgeXeb8qWJzv61HnqbbwOkh
      Uh9hf8DF6voGTZ4MB08e2dxsWoAU5JMJvHYbSqJQWxU699812wp/BK3rEMbwBURTF+qBF1hR
      VPrGP+DmhUu0Hz+JUsly4thRrl29QXMwgMvhQrPZkJZEaBALBYmFwmwlxUgkumbD7fZQKpZ4
      8cUzKIqC0+GkXKlQLBY5cvgA585doJArcGVklFdPnth6/NvOS4lkpwK8W6vS9nqj3Pep9rlc
      qXKtIHY7A8DjVCPYmvnHixV+5OmC46cQO+z1KzcFzHsL4z4rSKMC1QrCeWcDOVnM0b56i1cP
      9+K2qyz5HBQqJqpQ2e4VLeaLBMIRwsY6xeVJDF+0ljopao4ykVoBuxvt9LfvYoyZUBdtdief
      f3KW548f4pe/+CUdjTHCwSAALoeTYrmMrmu3w6O3TyiGYeHx++nv67093UjgwoVLtLY04nK5
      CHg9fOPll4gvr25N2liYPCxyFLb7E2RN1t+MTar5eEBs01+cDjvH7OXdmQ/wqIHcCdPFMj9q
      PUV58MyOxF9rVtYU1q8KElDvzGHSMmlZHeGHx3vx2DUSyTQj49MYhsn29EQhBPsOHOD88Ag9
      LsGfh6u8nrqJujiKNCrYl8b4vrLCK+lbuG58gLU4gSwVsJIrlE3JiKuZ8sYai8MjZDYSrKxv
      kEzVUiWPHT7AlbFJcvlCTRwR2wpdSbBpOvlsHssSKGgYhsmVK9cxDYOurg7sNhv5YhnDqpJM
      JzFN445s/1jvbIv4Le7PK97SFWrtBLy7VAleyOdRsIg47Gibs3XFtMgbBrqiMJJMs4ROSbWx
      TzdpcNi5nsxTOt75UKVXKAo4n812njveb0sk2lJILYuADZAmxaLJ6MQML7zwIk7n/dajYDBA
      tlrl8OAAIb+fWCRM0+o6Q8tXqErobelASIlZvE5vj4eZ5UmCfjcuu53l1VVuuBy0RCJE+/uI
      hCOMjo+TTKdpb2nGbnfw8bUhTgz2EQn4EFuKMxIhFFTLIpVM43a7uXDxIt3d7UQODCAQZDJZ
      /F4vDpuD9vYWPr54Cb/HzYG+HjRNvS/ux7IsLEuiqsrtDQstaSJQN73hdwj+juffQgJ2m7Y7
      GWAmGMbpcTE1Pc1zXjfLhSLvlHWmY4M4pYlVWaXSfxLFF2Z4fQl3fIqjWg4yGw8sff6VQ0qs
      9DqYRm0Hd0XDX83SHXBx7tI1nC43h44c3pH4oSYu1EWj6Jvh2UII2uqjtNVHb/sfpJTYNI36
      cIjGzR10FheXqOYz6D4/3tZWmpuaEEJw+OABZufm+eTSZSanpllq3M/i+Cp/cdSNpgq29gaT
      UuJzuXj7nXfo6emhrbWF+rq6WvBescitoRFOnzgCgNPhxBQQbqjj7OWrtDfGqAvX/C3ZfB5d
      0xiemmYjkeLovgGaNtMnxabCDBJ5l64g7wqCrIsEdycDnDp1AsuqshTwM3TxEu9XdBIvfA/V
      Zqeyec7tNO9II/lSjpbsNK6FUXLlIkq4EbGDV/ErhRA14s+nEZqNwOJlmnSTGzNFDh48wODA
      wCNNiIqqYln358tuXbdlMtxeCiUWa+DTi1fI13dS39TEdgWzrbWFttYWTp48yS+uDDPk288/
      DI3xZluYtY0NGurqCHm8HN83SL5c5sC+Qf7/9s7rO47sTOy/W1WdcwDQABoZJEEw5xlyhhOk
      kX2k0Wq1e2zvOXvW9vGT7b/Ir46ylaxdrWSl0YyGMxxymMAIkACInBrd6Jyr6vqhGwDBMCQR
      SEro3xNOo7r6Vvf97v3uF+12GyYG167dANPk0OAAq8YJi8XCiaNHuHNvBN2UPJie5eb9URLL
      Cdqawxiawvvnz3Lt+m0uXL/BuyeO0t7SVJv8TzskP6pCSbg+PLo7w6ErmRQgcTmdTBfLjFVV
      jM4Dz36Dy09yZgxTQi4RQ+ZWUMLtry3eZxXh9CC8IQKpWX5wuId0cgWr1YrNYmV6ZpamcBjt
      GQk4UsLc7CytgSAWy7PXwenFJaJdnSjKat0jgcfp4IruoxCbZ2/bk3FPmqbR3eRn6LPfEes8
      zuXFFHfu3mE5X8HUq8QTccYXFvD6/aSzWVwuJ8lUilDARzgcYL2UCjjsdro6ovR2d2FKSb5Q
      JJFO4/K4OH3yGLF4gmA4RE9vN3qphM/jrjvONlrvHidXKPDLh6ndKwASEyGgpbmJK4kqerjj
      mdcLRSETjlJq6sCYHa2tT4qCcPtfuxCQTfKWvYAdg5Dfz1unTxEKhbh+8ybJZKqe2P6kn0cI
      sFit3Lh1m6aAH4umYUpZi69/hMcFAMDr9TI/NcGo8NOpVvB5nE8EemuahsxnmBx/gLNapKWS
      JhbuYcTfy33pJhHs4V7FxlC8yPKty5TzefSqTrS9be1eGxLfhSQUDOJ2u3B7PNidTianpkmm
      Mhw7epjf//5T+jvacbvqWWjfEJSVSmf42dX7JGy7VAV6dF3I5HIIb+DJa1Z95vk08uafsORX
      kIqGGh1Aae+nOnodVddRWzoR1u0vbvsiSNOkLTHKufdP8PmFLzhz4gRQq1IXCgZ5551zDA+P
      sLC4yIHB/Vgs62EbUsqa+mO1MjQxyfLCIsHmZhwCBnt71yaSruvEE4knAsk6bZJR08IvRub5
      z81BNFV9QgjeOn0KTb1OanmZQH8f+3qa+PXEOGMdJ1A0S22OBiI8cHrpnbnCqb4+0pksfq/3
      kcn/qMVO4nQ4iCcSlEoVhm7e5D/9x/+Aqql893vf4euLl5FSMjYxjTQM8qUSZ04cwed2oxs6
      w2OTLOTKTJhO0gc/wjJ8eXcKwKrzXIhazIilMLvhv5apu7SV4yxIO6VwB2aolUq4HZtZxTN6
      GY+eYamlEyMVw0CiRve8lp1ApuMwP87FL8t4nK5az2JAVdW1w+2BA4MkEgkuXf6akyeO43A4
      kFJy48YQNrud8+++g6ZpjI6O4XQ6cbld3L57D4uuc2TfXiqVCkux2BOqlM/toPvhfWa9HSRS
      KVpCQR5fchVF4fSpk5RKJa59dQmbRaNcLiJUdd0uIwQi1MpSoY8745Pki2W+d/7MU59X1w3+
      6epdxkse8AbxtyYIBHwIwOGw4w0G+N2Xl/F73BzpirKSyfG/r43iwaDq8LBgb0ZGexCO2o5o
      7D21OwVgOZki6Kt9CaqqcNYv+W0mjuHwQinPcUuWgbYg/2NeQQRb0UJtmIUMFcOg7A1TXZ7C
      TC4hkzEipQS5wgql3prlAqHUAtdegUAIXwilpZuzb53Y0GFRCIGu6xiGgaIohEIhTpw4zsVL
      l/F5vei6zoEDB3B7XGurdn9/H59//gXnz7/LmbfOkE6n+fTy16h2O4cOHtygAq2SKVWZsnfw
      k5Fx/uGIFb+75h2XUlIql8nn88zOzrG8uMixvXu4NHyf6faT68k6j1CMDnKxWmZg/jobk5Vq
      h/RsrsDvb08y03UGze5BSknaNPjq8g3ePXuKoaE7pJYTRFqaefutE3zyu8+I+aIkew/gHvuS
      JU8U2vduFFGrbXcKwM28RmlynCOtflqbghzu7UBOTjI/X8ZSylIq5fn5jQWq5/7Nmk4s7C6E
      oqLHZtCdfpRgK8byLJUqaMUMxvAVjOwKWmsP0uFBDbYgbI7njOQlkBJZrWxQt4SikhW1ymqP
      67umKdF1fU3tcTqdvHPuHP/8q1/zg7/6GFXbqNLk83mcLmc9Q0shEAgwePAguXzuqZMfoLOl
      Ccet26T6TvDprasMhDyoioJQFBaXY4RCYZaWlnjn0EEujk5x07cH4XlS3aw9jACrnUQVTClQ
      11J9Bcl0ml+NrzDTcQbqTkghBGrfYYZH/sSZapW5mTk+/uAcP/v1H7g1dBdUlUwmg2xXSPra
      IRx9IrzcmLy3+wRACIGI7mVIa+V2Yo62iVGOhKwYlSoHIiHiS0VKip2s1LDEpyG1iNG+F1Fv
      Rqf2HkTqOsJixfLB35ExDFBVVCSqpDZRswmM6ftoe45u27glYMama58V6YG6nb6yOMVnF9IM
      7N2D0+WgUCiSzxXIF/JU9So2rJi6uWbuDAb8qFrNQUTdOYWEkZH79PX21j+rNvVy+XzNH8Cj
      cbP1YlqGyeTUJGdbHPxucYrbsTydXivtbe0U8gXOnTuHlJLZZJb/MrxEsf0I0uV/bvRsQnGg
      G2ZtjBIeTs3y+XyOxc6Ta5N/FSEUEpkC//OXf6ScyzExM8f3PjyP3Wbj4vWbeKXk68m75A6c
      w0wvI6QE+7pBwBqf2X0CsIqw2DAjvcxGepnOZxAuDdJxupZGONnXxrHOJH4efQAAG+5JREFU
      Evs7LMwsLHDp6wdU3v5rhKh7F+seWCEErOnGj6zC3jDE51lLet2O8QqB8ASR5cL6PbMrvDXY
      x55oEw8fTlKpVAk3hdBUjb49PVisKmOjo8zOLTA9NUNnVwf79+8jmVrB5/PVbiNhaTGGx+Mm
      EPSvhRZnM1lmZ2c4f/5dNlrQa//PF7IsLCwQDAZwPxiiENlDS2uE5uYQKysaV27fY3ilxGJo
      D3praMPX800YLT3cGx3n6P5+KtUqf5zOEOt765kqpTz5L1hUVMyrv6VS1bFZrUzNzVMql4mn
      MvTpCzyMtUFL7xPvdXp9u1cAHkVx1SM7bR1MeUNMLU6h5Rapjk5w7uwpHoopZk3ziRVImiYU
      c0hAcXo2TnbNhizmtrUanOILAY9Upnb5+f0vf8SX1TyHDg1idzgIBPw0NzehKAqffXqBru5O
      zp8/y5Ur13E47Ny7N4zH6yaXzVPVaxMml6upOXv2rU+Syakp9g30o1kEkvXQccMwqVTKJJNJ
      otFWBgb2sW/fHn75699z8XIS3RNiwRam6OtCdnlAr2LMjKC9aB80l4+hiRIHDRNd19Fs1mdO
      /sqtL7AceLu2G3pC/PbCl9wam6Y57Ofk26dZSaaYG3nAeHIZIn1PvD8ldukZ4JkIgbC7oHsQ
      o3uQ8bkRnFeHSBruDZlf0jRwzj/AMnefUjqJy+Mi3XYA3ebCLBUQqgbSAMfO5lkIVcUItuMp
      L3Pk2GHSqQxTUzO1cIVqle6eLorFIteu3qBULFEul3G7XZw8eZxHlZpMJsuP/8/PqFQqWOsl
      TgJ+H6MPxmlqCqMoCpqmUSqVGbpxk8XFJbxeLx988C4gcLvdeJx2JnQHFf8erIUUgcX7WAop
      FtoOozRFX/yZhGDe1cbM4jJBj524fHooh5QSKVhbdEwgi5Xcwe+xePsPRJdX+PriJdpamhH+
      piffX8hi5jMNAfgmCi193Pl6hPbSOCPOJkS5iLS70Gw2vmtNc7eaphoJ88PvnGcpFidXKpDM
      ZBGVEl8tZCh2De54hrzt3PfJLIzx4OEMFgyOHTvMb37zCdFoGxMTk6ysrHD+3bP89Kf/yFtv
      nyYUCvCoJ0RKye1bd3C73aRSKcKhEPeG71MsFhGK4LNPL2CxWjBNE5vVSiBYO8R2dXWs3UcI
      +OijD7h05TqtYoaewS783h4+uXydJW/whfIYHkUGW7k5e52jbT6KcxNo0f08XkhIANbew2sC
      IDRL7XNUlezg+/zfq59h1TVm28+gu4Lr4m7UdjP9/lW0zoHd6QkezujMFp/f6VAoKpX2vcTz
      BQKTt1BKeSwL45yx5DnW206xXKarpxOf100g4KMp6KWjtYloeyv6yhKFqRGKoa4NIcvbjVAU
      DHeQUmyeoFLh7t1h7DY75987SzTaTiqZZmBgD8PDD1hajHH27Ftr7ZyqVZ2lpRjlUom+vh5G
      R8eZnZ0j3BxiYP9e3G4XsViM06eP09vbQ3dPJwG/n2vXbnDg4AAWq4VVCXc6HbRFmlhJJLh9
      +y5er4fPkgp6IPLyz6SqxAyNsZl5jrpN4jqY7seKDgiBLGahkK3lQxRztGXnyNp8KOE2DKeP
      cudBpDu4IT9DCIExfR+1pQslGGkIwPMQQiBaOim19mO07cHwhvhOk4bbbiXk9bA0O8fExDTj
      D6doj7atBZgN377L6Y4m0pP3yaczGLkUuP3PziXYAkII8u4mMskVBlq8qIpCZ0eUcrnMwuIS
      zU1N3B2bJGbaSJUNokEPiiK4c/su8XiCI0cPcefOPU6cOkb/nl58Pm8tU8vpINwU5srX1+nt
      7UZRFFRVpbmlmbt3h+mIrgbD1exENpsNXTfweN0ML6WYiRx66eQgaRi1MBOHm6o7hJaJk3eF
      MZ2+Jy+22KBSrAUEBlvJ5LI4719C8wYxmjprZujHzw+VEj3T18iVSuha4wzwwqwdZjPqWgd1
      q6ZxuL8H05RcuDtC1dAZuT2Ky2GnWihg6AZRI8sPO1r4/LNPqMzcYPjgR/AUnXTL47PaSfec
      4k9LD7FOXONu6SY5U0GWBFcvT1E49F2kw80tvUrswiUs+SSdTX7Ov3O6VujWZkNRFObnF3k4
      PonDYSeTyeB0OrE77HzxxVfY7XYGBwfI5XJkMzm++uoKAwN7yGSypNMZlpfjdHV3YnW5GSkE
      a2ehl30OIdasZ8LuYqb3bVDUp2qSQlXB6SV0948Egn4muvczSIZQ8SGflJoxbW5kOo7w1wP2
      VhZRvvwFoRYPibkYaWfDCvRSSCnx5Fdw+R/ZMQUUK2UqlTKGbpCMJ3AJeL+/h9FsHoRgeGKa
      gq7TZhZZnB4i6f9oZwaoKFRa+6lE+sg9svKthngLAKvK0r73kZUy87c+JXzvAXa7lXA4xE9/
      8o9YLRZ++Lcf17K3bNY1J5hpmkxPzXLh84u0tUVobY3Q3d3B2NhDcrk8be2tHDl6iNHJGX4X
      k5SDzw4u/CYer6D6PCESNgfL4X66zEWO5scZy5ZosgtIxzGVFEK1IJNL2JanOKVmsfS10rq3
      j+sPS6jdB3ZrSuSzWe2w/sTrUmKbvsO+7CTFYrEWLCdqr//8jxew6QYXPvsCtVQiGg7idtqR
      hQIhTSNss/LhyaMcP7yfA2YKMxnbEGO/7TzH91AL9DNRkVy9cp256TlGhh9w5sxxotE2LBYL
      dod9gwdYURRSqTRnz56ms6sLwzDweDwcO3aYpqYwfr+fWw+m+GXCQTLYt/nD/ya+FiXSxbWF
      DAG7jfMHu/nDjbuUHwyhhKNgsREZ+YzmhbsIo0Sgo41oeyv+zCzG3HhjB3gcc/IeZmIB7fiH
      G1efUp5zrjKD/Ue592CML27d5eN3TmO3Wmnx+Th/YO8T4cSn+rqeuH8mk6Fl6NdUI/2kgh3I
      cPumVIVNIyWykEGoFvrCXr7//bNUyiXu3R+joyNKsVh6aglBXdeZmpqmWKoyMbPAh++/w+ps
      VVWV68MP+dq1FyXYvLXxVUsbvLUvgrDakfvf4sL9i/y7D0/xrQ/P8f9uz4A0wWKlqz3Ch28f
      Xfttxh5OEQ/0YJ/ZhaEQz0PpHECJdD/h9KJcIB9fhLYApq7z7uFBvrp5j6ppUNFrXdQfj6V/
      Gt87cZjFVAa/S+Pm9DX+ND5EORxFdbihvX9HDsmPIxy180xK2Bh/OMnk5DTBUICbN+9wsp6O
      +DgL84tMT83SN3CA0917mZseZ34ajh49RLaic8PZgxLY4uSnFnO1qfd5ghS8ET4bGuGH54+R
      yJW58vnPkL1HGMoIuiZnaWsO4XI5uTSXxebr5Jw73xCAxxGaBbQnyx2KaoWl5QRXr1zn3OBe
      7FYrXpeDy3fu8zJWNCEErYGaReNIR4SjCEzKlKoFPh2eYrzjKFVnYD3oa7tLrDwSNbrYdojf
      3vwD7+2J4LDbSGeyz3wWRVUIBAP0drZgd7hQIkdJxBN88eUlbirNGO3PLhImpUQWczVv+Q4h
      VBW17wjjhQyXhyf51lvHuZe9SsEXotLWy0/icygLSYLZu8TdraBYuHm3oQK9MKJSZH9rC3va
      m7HVIyyv3L3PofaWDS2CXgaHzbp24HPZ4IdOO/eXh/hizsby/ve2bezPxGIjt+9tPvvjfyMU
      9NPb10O5XMFme1IIXC4Xff19OJ2OtSLy4aYQJoKM1ffNu59pvBI1T1jtGJqVz+NFRi/copRO
      Qz4NngDS6cHwNxFv76/5ZSolVgy1IQAvioz0cHUyxT6l1l50JZPDb7MS8rx8GZRn9YlRFYXB
      lhBLo9PEXqIytNQrtVCNzQTeufwEDp/hb98eIB5PcO3qDRKJFTRV41sfvbe2I7jdLlKZDIWy
      gdO2Xp6kr7eLS5OFbzy7CkVFamxs3LFDCEVBNncx6/DiKlyhOT5MauIqPe0R7t4bodC6F63v
      MFJR4eiHDQF4YVSN5fZBbsx9zbneCAGPm+vZPJOxOK0BH6qiMLeSosXnfaJl0MtgmpIl1f1y
      CTVbmFRCUchY/ZhSEI22oakqR48d4v7IWD02qCYAd24P0+T3cPWrS1itVo6dOIrVqqFpKkJ7
      JGmxWqkV8V1Vd2oJBq/2oA8ongDFY99h0jSRhQzJzArscSOyKcw7X2DkM6iFRizQSyHsLq5X
      7LxlSlQFTh0c4MrwAx7MLeFwO/EFAhRiy+yPbq5orpSSSwsrjHeffrlxbXFyZSwullfSdEeb
      aW2rhS54PG4ufXWV5uYwe/b2k8/nOXX8MKqq8unnX/Hlxa85dGAfc7PzOKaWyDd1Ik1Zy4az
      2ddMrUJRa2EL9RicVy0Iq8ULcPuB3lp7dClRTANm7jf8AC9LrvswFycWQQq8LgffOnmU7q4o
      fb3dDPZ1kyhXGZ5boFB+0pcAz1Z/AIbmY3zh21v/sV4NUkpcRmm9mkKdlpZm7HY7K/EEQ9eG
      iC/HuX7jdi3VUjfI54vElmLs7e9lf1cLGDrG3CgyuwJCRQ59Cnp1PVhN1V755H8Wor4jie4D
      jR3gpbE5uW26OVnRcdZbp2YLRYLhEJqmcvbkMeaX41x8MM6prig+V+2A/CL9IS+U7FT7n/Qd
      7Ch6haOWNGF/J496oR5OTNLR1kJbWwSLxUIymWJxKcZXl67Wco2Fwt69/VgsGpa630DrGqyt
      9LEp3u9w88XSQ8xvqrf0BtDYAV4WIUh3H+F/TWYYX1rBqNemdDtq276iCKItTfT3dnFjYpp8
      qfJCkx+gpFi3LYNMVstI+WTVt8cRiXk6WyOslRSsj1VVFLxeby2nWEK5VOH27WGampvYt68P
      TIOVlRXK5TJpQwHVgizlCMze4ryySFdbGK2U3ZZn2UkaO8BmsNhY2nuWH8emODgxi5lIcrS+
      Cq6GOHREmhEI7s3Nc7qv+7m31A1jLdVyOxDai91Llks8GBpj4p5aE2BVJdwUplKt8qtf/Y5A
      0E9rpAVVU/nBX32XiYkpUsk00WgrFUPy3y8/JN6yH1QN99I4f3+qF4/TzoMHo5TDPTudDrFl
      GgKwSYQQyJZublqdHJ0YYW4pTnd7BInEME3Gp+Yo61UypfILNbsbW1pGdr67nQN8seuaO/HZ
      s5zqb2dVBYolVrh25x5n9/RQKlfIV6scP17rHtPcHGZ2fgGLy8PP5yT5zhNrz1ZVbZiGgRAw
      mcghWgY3fJTUqzVHI/V0UuQr8Xw/jpSy1lch22iSt2WE0wOKSrlaXXttbGoWXdeJBP1kY8tP
      mYurMfQ1dMNgxLRiWF9Dqyq7k8sxO4OlKj53Lf3Q5XQS9nvpr1uzHs4vMjx8n8HBAar1UisX
      ppIU+s6uZ1pJiVs1sVo1yuUKU1Ursh7GLE0DubIElRKi7cnk9FeGlMhckqbhr+mJz7CnkGwI
      wFaR5SIRh4OHYxMsTs9QrOqkszn+5nvfxqJpXC5VuDI6yYn+7ke8pbXJrxsGiVyRiUyesaZD
      yB12Ej0NIQT5yB6+nrrDRwdqB+H7ow+JBNYtUd2RZn575QbTE9O4/T7efvsUM6lbxA1jvUq2
      aTBgLeK025mbXyBlD63veqJuinykTtKr6qLzKDI+x+Gv/onvmUXsCIRll/YH2FbScTrcLkrx
      PCe6olg0QAiGrt/CH2nm4w/OcfXOCGPzMfa21w6bEslCKsunKZ0JRyuE9yKCra/tEYTNwVKu
      yOrOZJoG3a0tQD1neGKaAwcH6WiL8OnX1xGK8mRZdaGwmK/tgg/nYxA8tP4vIcC+0cz6OrDP
      P+Rjo4hdWd+SGwKwVQydfLmCw+nEabUghYkQgmMtYeaSSS7HVzh+cJBfffIn9rQ1g4CFTI6f
      yhay+wd2PDTgRYkZGoYpUBUolSssJJKMzS0gpSTS0U5HWwQpJalUmp99dpUJ/8bIVSEEM44I
      //jlTcbwYWjbWBVvmygX8yRNk9ZHxt0QgC2i6RUEJhZVwZQmq40YLaqC3+Hg5uwil2/eQTVN
      CuUKTruVsUSSfN+JLYUwbDd5d4iVTJYmvxPdNBmanOb9c2dQVRWb1QYIYvE40zNz5MODEGzf
      eAMhqDb3cI+e1zL+F0F4AuhyY9bZm/ML/BkipaQju8RENs3+tqZ62MuqLV3BY7dzqjlEMZXi
      nYP7cdltSAlJXcNU36xCBEprL78eus8XV4aw22z8yw/P43Q4sFmtSCm592AMn8fN6TOnEKH2
      59/wDcTsPcioZWOdoYYAbAUpsehlnDYrmiIeibVfdyaNxeLsibYTrEeNTiXT3Gk9Ai9op39V
      CFVjru0Q3mCIE4cHN6RDTs3NMxVbZuThBBdFBOkJfcOd3mDsLu619FAxzbVukQ0B2ArVMpl0
      irDHVV/5qfdzqAmBlJBJpSnMzXN3epZ0ocgnhg+aO7fN47ttCIEMtXI7bdRVnnW62ls53N/L
      3YqdcuveN2/sL4gQgnhrH0kJ9XLDDQHYEkIh6HISy6y6/GuqT+0vQbZUJuKwcyToo7IU40dT
      KWLRI69tuM9DKCpZU8Wsl32phXmYZPIF/rhYYLr92J/t5F9FKgp63VtflbJxCN4KslKiRTEx
      DVlvUFF7ffWAVdENpgoVfKkcc5qLxP7zoG4+V+BVsOIIcHV0hnjFIFk2UTWNOdWH3nnqtfgp
      thtnLk0GyBpwqXVPQwC2gmN5Cq2co7Pl0UJX6zaGsNuFO9rJT7rOYDi8iJ20ha+WWdnqCt3a
      xyfFFrDaa2EL21ji/U0gv/cEP26KghCYwZaGCrRZpGnSs/SAsqHT5H00hGG9qZsQgqhNrYUE
      7LAjSJby39gW9IURotZ+dbUwwF/Q5Ida8rwMtyFDrQihNHaATWNU8ZdXJ916pQWARD7PfCZP
      rCK5GejF9IZ2PirS5mTHS1H/BdIQgM2iWUmaCm1WG1ZtYyj0w2SKX7efRQm3IZ5R13K7EYqC
      lGatuOwbknn150Djm9okMpdCK+cwresu/7Ju8IupZbLuMEpT+2sIc2jsAC9L4wywSWRshqvz
      C7jt655FIWChbLLYfeK1xPis5ro2eHEaArBJzFwKr8uzIe2wWDUw2vvBtXMV0BpsLw0B2ARS
      Sox0HLNcYC6ZRkqJbphcWkpSaN37WrKcGmyOhgBsBkNHScXo9XsI18uJ3E6kuDbwbRT3UzqZ
      NHhjaQjAJpCVEmg2DjSF8TgdIKDX6yY6cbWe69rgz4WGAGyGUp7K4gQjiRUiXg8CgUURmJr1
      taT6/SUgkOve7FdI49faBNIwEKaB1+0iUFeBLsRzzPW/9ZpH9ueLD3NT3WG2SsNmtgmE3QlW
      B4uZHIVKheVylZutR5AWWy2rVkoo5WuC4nQ3DsUvQEoqr8WN0RCATbAqAHOpNLfnFikhKAdt
      j4RDSMpf/TPmzCjWc99H6z/6Wsf7Z8FrijlqCMBm0KyoLZ3kx28wPL9IxTAgtABrlR0E1hPf
      xojuRe1+s2tj7nYaZ4BNIITAevwDdMXCVCaHxWLDH3+I0Ctr/1d8YSx7jq1HVb4o68GkDV4B
      DQHYJIovjP1bf4dudTKfTBJJL+H904/Qb3+BrNY7825mW29M/ldKQwXaAlrXfpRgK/rYDYam
      72M9+j5aZIvlzRtL0iulIQBbRPH4sR77AHnw7FO7SzZ4s2kIwDYhLLbnX9TgjaOx4TbY1TQE
      oMGupiEADXY1DQFosKtpCECDXU3DCrTTrIX4ikbO+htIYwfYMSQOIfEqEtHw7r6xNARgJ5Dg
      UyTnfVXCVokUjdX/TaWhAm0zQkpOunSKCH6XtDRCe14BdiEpm9QWmlqhvhemIQDbiqTDZnLW
      r/PzuLX2g+xyhJQ0WyU5Q5A3d+b7GHAYlAxAgEuVLFUVVnSFwqOfJyVBTbJirDcwgYYAbA/1
      Zd4i4AN/FY8KH4eq/Nelx36E3YQEpzD5V80VIjbJii74ccxK2tyc1i2QBBSJCqTMWvVtlyoR
      QLfNZNBt1K8DE4hXBPcKKvcKKllD8L6/yhG3wW9WLEyVFXJ1QWgIwHYgJHYTjrh12i06oJLR
      BcZu1X8khDSTbqtBi1ViVaDFInnHp3MrrzJTVl9KTbEJSbfN4K/DVTQBSxWBArTYnv4FK0DE
      JonYdE64dbKGoLk+jr9pqpIz4FJGw5SNHWDbkMLEoZhIaQAq13MqZXM3HX5r3VaaLSYn3Tqq
      gP0uE3W1aYiA4x6DPodBSq+9OFdUSBgK40WFshRU5GPfl5RoAr4brLDPYWKpbx6tz5j4T8Nn
      AZ9l4/VuFb4d0IGGAGwTgrJQKZsGSj0BXqu9/JfJY804VCS9dpNv+2tWr2/Cp4FPq13TZTeA
      muoSqwh+FLNiIMgbNUHwaJK/b6rQ9Jx7boWGGXSLHHXpRNTaahK0sCYAPQ7jLy67S0XSZjF4
      x6PzLX8Vrf6Ax9w6PwxXnjv5v4mwRfIPzWX+fUuZqK0mFEFF7ujkh8YOsDkkqKLWGiOkmuzx
      S0YLcKR+EAMYL7ycnruTeNVazZ3M0w6gUmJRoMNqkqoKSlJQkaACZUltlZegCcl73ipv+9af
      0atJbuc1wprEtsWlVBEQtIIpJQ4kH/srHPEYz3/jFmkIwCaxKxJDCva5TByKxK9J1EcmwX6X
      wUhJxXidUiDBp5p8x1/Fp0keFFRmywoRm0mgroYICTZVss9pUjSgagoSVYFDk1xIW7AISVCV
      dNpNuuzmhjTngy6TDmtlTc/fDgTwV+EqDvXVVEppCMAmUITEDhzw6AQ0iSLAqa5v1UJAu83E
      oUDuFZYKFbLmhxh0GPQ6TWyKxCLAWuvhTcSqr/mJnja53BqAJGCVSAn/uqle5eIZ10PtkLmt
      zyDA+QpnZUMANkkFUEVt634cWe+z+0qRcNKl815Ax/GMQnQvE5GxW6I3dq0AaEg8qqTJIgla
      TO7kVHLyxRRZE4ENyQGn/sxrFKEgxEv65TeFRAFsChzxGM+c/A2ezq4VgAMOg4/D1bUVvM1q
      8oekhYwhsChgmGA+Zd8PaSZZXRA3FX6RsPJvW57UgYUQONWaTTxr7JChrb7BdNlNPvBVcSkQ
      sPyFmZ1eAbtWAFqs5oa1eZ/TJGotk9YFVgVSuuBiWmO+qtSDrGq6/j67QYvV5EFRZaykMpxX
      Oeh+0lpRNiFT3bnV36ea/CBcIWyRuBqr/qbZtQJwt6jS5zDXbNea2Og1jNgkA64Kv1nRuJar
      Wbzfc1dxWaHbYXLQbRIr61ifscBndEF2k3EvL8Jxt0GXvbHib5VdKwBuReJQnj+BPvDrdFpN
      ElXBMa+xYbVt/gaXfLwqKJls6xHApZjYBBRMwYBz523ku4FdKwD3SyofmDqu57hrbUotpgVe
      3C4tJfVAuO1Vgc56dQ45DRYrCsGGvr8t7OJQCEH5BW30Qry8UyZjCNRtzoWcKik4VOhzmk81
      vzZ4eXblDrDfqePVawfIneKsz8ChwIWMRs7YYvcTCRYhGXCau8I2/yrZlQLQYzeJip3ToYWo
      xdKc9BpEbSafpiyMlZQt+fYH7AYHXcbraqTyF8suVoFeDRGb5G+aKpxx65vugiiQKArbGnPT
      oMau3AFeNTYF3vPrxHWF8dLLRYm6FMlH/goHXY3+wzuBVqlUXvcYXjl6Rcd4xfmKCvCRv0Io
      q1F6iY9utZjssxvojfm/I/x/9nDOCISp/SIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rwGknPb/AdjHHFHbtLOPAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
